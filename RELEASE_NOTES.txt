OVERVIEW
-----------------------------------------
This KBase service provides an API for interacting with the KBase Objects Workspaces
(KOWs). KOWs provide an online location where objects generated by various KBase analyses
can be stored, accessed remotely, and shared. Once stored in a KOW, an objects is 
accessible to all KBase services for any authenticated user who has permission to view the
KOW. For example, a user may build a model using command line scripts on their computer.
Then they may run flux balance analysis on the model in IRIS. Finally, they may go to GLAM
and view the model and FBA results. Because objects are stored in a KOW, they can be 
accessed in all three environments. KOWs also provide a convenient means of sharing whole
datasets and workflows with users. A KOW could be considered supplementary material for a
paper. Finally, the KOWs maintain complete history of all objects, enabling a user to
review the revisions made to an object over time.

VERSION: 0.0.4 (Released 8/13/2013)
--------------------------------------
NEW FEATURES:
- Connect to mongodb databases requiring authorization
- get_objects() method

UPDATED FEATURES / MAJOR BUG FIXES:

ANTICIPATED FUTURE DEVELOPMENTS:
- Authentication will be required for all writes, including workspace creation. 
    The 'public' user will be no different from any other user
- Workspace default permissions will be limited to none and read only
- A user must have at least read access to a workspace to get its metadata
- Only the user's own permission level is returned by 
    get_workspacepermissions() if a user has read or write access to a workspace 
- Only the workspace's owner can change the owner's permissions
- Type names will be limited to ascii alphanumeric characters and _
- Object names will be limited to ascii alphanumeric characters and .|_-
- Object names will be unique per workspace, even if the objects are
    different types
- Type compiler provided embedded authorization
- Optionally exclude world readable workspaces from the output of
    list_workspaces()
- Shock integration
- More rigorous handling of types using something like JSON schema
- Rework of object references, automatic reference verification
- Remove or alter many object deletion methods to prevent breaking references
- Data provenance
- Freeze and publish workspaces
- Workspaces namespaced by user
- Permissions for Globus groups
- Workspace descriptions

VERSION: 0.0.3 (Released 1/1/2012)
------------------------------------------
NEW FEATURES:
-Added functions to manage the addition and removal of types.
-Added functions to handle job management to support running jobs on local clusters
-Added "instance" argument to "get_object" to enable users to access all object instances
-Created a complete set of command line scripts for interacting with workspace

UPDATED FEATURES / MAJOR BUG FIXES:
-Added ability to retrieve specific instances of objects
-Fixed bug in deletion of workspaces
-Fixed bug in object reversion
-Fixed bug in object retrieval
-Fixed bug in management of persistant state in workspace

ANTICIPATED FUTURE DEVELOPMENTS:
-More strict rigorous handling of types using something like JSON scheme

VERSION: 0.0.2 (Released 11/30/2012)
------------------------------------------
NEW FEATURES:
-This is the first public release of the Workspace Services.
-adjusted functions to accept arguments as a hash instead of an array
-added ability to provide authentication token in input arguments

UPDATED FEATURES / MAJOR BUG FIXES:
-none.

ANTICIPATED FUTURE DEVELOPMENTS:
-add "instance" argument to "get_object" to enable users to access all object instances
-add services to support management of types

VERSION: 0.0.1 (Released 10/12/2012)
------------------------------------------
NEW FEATURES:
-This is the first internal release of the Workspace Service, all methods are new.

UPDATED FEATURES / MAJOR BUG FIXES:
-none.

ANTICIPATED FUTURE DEVELOPMENTS:
-public release of the service
